" my vim settings
" Author: Fujie lab members


" syntax
syntax on
" 行数表示
set number
" swapfileを作らない
set noswapfile
" コマンド打つ場所の高さ
set cmdheight=2
" ファイル名表示
set title
" コマンドでも補完が聞くように
set wildmenu
" 小文字で検索したとき大文字小文字を無視する
set ignorecase
set smartcase
" 検索結果にハイライトをかける
set hlsearch
" インクリメント検索
set incsearch
" vi互換を着る
set nocompatible
" カーソルで行をまたげるようにする
set whichwrap=b,s,h,l,<,>,[,]
" tabなどを可視化する
set list
set listchars=tab:>-,extends:<,trail:-
" バックスペースでindent, end of low, startを削除できるように
set backspace=indent,eol,start
" タブ幅4
set tabstop=4
" マルチバイト用
set ambiwidth=double
" pathに各拡張子用の設定を書いた物を追加
set runtimepath+=~/.vim/,~/.vim/ftplugin/
" エンコーディングの設定
set encoding=utf-8
set fileencodings=iso-2022-jp,euc-jp,sjis,utf-8
" もしutf-8ですべてのファイルを管理したければ
set fileencoding=utf-8
" この優先順位でファイルを保存する形式を決める
set fileformats=unix,dos,mac
" 256色描画
set t_Co=256
" Space をLeader にしてみる
let mapleader = "\<Space>"
" Space w で保存 Space q で終了
nnoremap <Leader>w :w<CR>
nnoremap <Leader>q :q<CR>
" Space SpaceでVisual Line
nnoremap <Leader><Leader> V
" 不要なウィンドウのポップアップを抑制
map q: :q

" OSの判定
if has('win32')
	let ostype = "Win"
elseif has('mac')
	let ostype = "Mac"
else
	let ostype = system("uname")
endif

" put esc-key for delete highlight
nmap <silent> <Esc><Esc> :nohlsearch<CR>

" reset augroup
augroup MyAutoCmd
  autocmd!
augroup END

" road template
autocmd BufNewFile *.py 0r $HOME/.vim/template/template.py
autocmd BufNewFile *.cpp 0r $HOME/.vim/template/template.cpp
autocmd BufNewFile *.c 0r $HOME/.vim/template/template.cpp
autocmd BufNewFile *.sh 0r $HOME/.vim/template/template.sh
autocmd BufNewFile *.tex 0r $HOME/.vim/template/template.tex


" shougo-s-githubを参考に改善してみた
" dein settings -----------------------------------------------------
" set cache path
let $CACHE = expand('~/.cache')

" if vim8.0 or latest, Disable packpath
if v:version >= 800
  set packpath=
endif

" Load dein

" dein自体の自動インストール
" let s:cache_home = empty($XDG_CACHE_HOME) ? expand('~/.vim') : $XDG_CACHE_HOME
let s:path = expand('~/.cache/dein')
" let s:path = s:cache_home . '/dein'
let s:dein_repo_dir = s:path . '/repos/github.com/Shougo/dein.vim'
if !isdirectory(s:dein_repo_dir)
  call system('git clone https://github.com/Shougo/dein.vim ' . shellescape(s:dein_repo_dir))
endif
let &runtimepath = s:dein_repo_dir .",". &runtimepath

" echo &runtimepath
" プラグイン読み込み＆キャッシュ作成
" set runtimepath+=$CACHE/dein/repos/github.com/Shougo/dein.vim

" let s:path = expand('$CACHE/dein')
" if s:path != '' || &runtimepath !~ '/dein.vim'
"   if s:path == '' && &runtimepath !~ '/dein.vim'
"      let s:path = expand('$CACHE/dein')
"     \. '/repos/github.com/Shougo/dein.vim'
"     if !isdirectory(s:path)
"       execute '!git clone https://github.com/Shougo/dein.vim' s:path
"     endif
"   endif
"   execute 'set runtimepath^=' . substitute(
"         \ fnamemodify(s:path, ':p') , '/$', '', '')
" endif

let g:dein#install_progress_type = 'title'
let g:dein#install_message_type = 'none'
let g:dein#enable_notificiation = 1

" vimrc や toml に更新があれば実行
if dein#load_state(s:path)
  call dein#begin(s:path, expand('<sfile>'))
  call dein#load_toml('~/.vim/rc/dein.toml', {'lazy': 0})
  call dein#load_toml('~/.vim/rc/deinlazy.toml', {'lazy': 1})
  call dein#end()
  call dein#save_state()
endif

if dein#check_install()
  call dein#install()
endif

if has('vim_starting') && dein#check_install()
  call dein#install()
endif

"End dein settings------------------------

" 引数なしでvimを開くとNERDTreeを起動
let file_name = expand('%')
if has('vim_starting') &&  file_name == ''
  autocmd VimEnter * NERDTree ./
endif

" ---------- neocomplete.vim設定 ----------
" Disable AutoComplPop.
let g:acp_enableAtStartup = 0
" Use neocomplete.
let g:neocomplete#enable_at_startup = 1
" Use smartcase.
let g:neocomplete#enable_smart_case = 1
" Set minimum syntax keyword length.
let g:neocomplete#sources#syntax#min_keyword_length = 3
let g:neocomplete#lock_buffer_name_pattern = '\*ku\*'
" Plugin key-mappings.
inoremap <expr><C-g>     neocomplete#undo_completion()
inoremap <expr><C-l>     neocomplete#complete_common_string()

" Recommended key-mappings.
" <CR>: close popup and save indent.
inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
function! s:my_cr_function()
    " return neocomplete#close_popup() . '\<CR>'
" For no inserting <CR> key.
    return pumvisible() ? neocomplete#close_popup() : "\<CR>"
endfunction
" <TAB>: completion.
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
" <C-h>, <BS>: close popup and delete backword char.
inoremap <expr><C-h> neocomplete#smart_close_popup()."\<C-h>"
inoremap <expr><BS> neocomplete#smart_close_popup()."\<C-h>"
inoremap <expr><C-y>  neocomplete#close_popup()
inoremap <expr><C-e>  neocomplete#cancel_popup()

" Close popup by <Space>.
inoremap <expr><Space> pumvisible() ? neocomplete#close_popup() :"\<Space>"

let g:precious_enable_switch_CursorMoved = { '*': 0, 'help': 1 }
autocmd MyAutoCmd InsertEnter * :PreciousSwitch
autocmd MyAutoCmd InsertLeave * :PreciousReset

""
"" quickrun
""
set visualbell
set vb t_vb=
autocmd FileType plaintex setlocal filetype=tex

if has("vim-quickrun")
  autocmd MyAutoCmd BufWritePost *.tex call quickrun#run() 
endif
let g:quickrun_config = {}
let g:quickrun_config.tex = {
            \ 'command' : 'latexmk',
            \ 'cmdopt' : '-pvc',
            \ 'outputter/error/error' : 'quickfix',
            \ "runner" : "vimproc",
            \ "runner/vimproc/updatetime" : 40,
            \ 'exec'      : '%c %o %s',
            \ }

" neosnippet
"
" SuperTab like snippets behavior.
imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: "\<TAB>"

" For snippet_complete marker.
if has('conceal')
  set conceallevel=2 concealcursor=i
endif

" status bar
set laststatus=2
set statusline=%F%m%r%h%w[%{&ff}]%=%{g:NyanModoki()}(%l,%c)[%P]
let g:nyan_modoki_select_cat_face_number = 2
let g:nyan_modoki_animation_enabled = 1


" colorscheme関係
colorscheme badwolf

" 透過用処理らしい
highlight Normal ctermbg=none

" https://github.com/Shougo/dein.vim/issues/65
" needed らしいのでいれてみる
filetype plugin indent on
syntax on

