# [[plugins]]
# repo = 'Shougo/neomru.vim'

# [[plugins]]
# repo = 'Shougo/vimproc.vim'
# build = 'make'
# on_source = ['unite.vim', 'vimshell.vim']

# [[plugins]]
# repo = 'Shougo/neoyank.vim'
# on_if = 1
# on_event = 'TextYankPost'
# on_source = ['unite.vim', 'denite.nvim']

# [[plugins]]
# repo = 'Shougo/neocomplete.vim'
# depends = 'context_filetype.vim'
# if = "has('lua')"
# on_i = 1
# hook_source= '''
# let g:neocomplete#enable_at_startup = 1
# source ~/.vim/rc/plugins/neocomplete.rc.vim
# '''

[[plugins]]
repo = 'davidhalter/jedi-vim'
if = "!has('nvim')"
on_ft = 'python'
hook_source = '''
source ~/.vim/rc/plugins/jedi.rc.vim
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'
on_event = 'VimEnter'
depends = ['jedi-vim']
hook_source = '''
let g:python3_host_prog = systemlist('pyenv which python')
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
on_i = 1
hook_source ='''
let g:deoplete#enable_at_startup = 1
source ~/.vim/rc/plugins/deoplete.rc.vim
'''


[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets','context_filetype.vim']
on_event='InsertEnter'
on_ft='snippet'
hook_source='''
  imap<silent><C-s> <Plug>(neosnippet_jump_or_expand)
  smap<silent><C-s> <Plug>(neosnippet_jump_or_expand)
  xmap<silent><C-s> <Plug>(neosnippet_expand_target)

  let g:neosnippet#enable_snipmate_compatibility = 1
  let g:neosnippet#enable_complete_done = 1
  let g:neosnippet#expand_word_boundary = 1
  " let g:neosnippet#snippets_directory = '~/.vim/snippets'
  " imap <expr><C-n> neosnippet#expandable_or_jumpable() ?
  " \ " \<Plug>(neosnippet_expand_or_jump)"
  " \: pumvisible() ? "\<C-n>" : "\<TAB>"
  " smap <expr><C-n> neosnippet#expandable_or_jumpable() ?
  " \ " \<Plug>(neosnippet_expand_or_jump)"
  " \: "\<TAB>"

'''

# [[plugins]]
# repo = 'Shougo/vimshell.vim'
# on_map = { n = '<Plug>'}
# hook_add = 'nmap [Space]s <Plug>(cimshell_switch)'
# hook_source = 'source ~/.vim/rc/plugins/vimshell.rc.vim'

[[plugins]]
repo = 'aokiyuya/previm'
on_cmd = 'PrevimOpen'
on_ft = 'markdown'
depends = 'open-browser.vim'



[[plugins]]
repo = 'ujihisa/neco-look'
on_source = [ 'neocomplete.vim' ]
on_ft = 'tex'

[[plugins]]
repo = 'lambdalisue/vim-pyenv'
on_ft = 'python'



# [[plugins]]
# repo = 'splitjoin.vim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'
hook_source = '''
set helplang& helplang=ja,en
'''

# [[plugins]]
# repo = 'tweekmonster/braceless.vim'
# on_ft = 'python'
# hook_source = '''
# autocmd FileType python BracelessEnable +indent +fold
# '''

[[plugins]]
repo = 'zchee/deoplete-clang'
on_ft = ['c', 'cpp']
hook_source = '''
	let g:deoplete#sources#clang#libclang_path='/Library/Developer/CommandLineTools/usr/lib/libclang.dylib'
	let g:deoplete#sources#clang#clang_header='/Library/Developer/CommandLineTools/usr/lib/clang'
'''
# let b:clang2_orig_maps = {}
depends = ['deoplete.nvim']


